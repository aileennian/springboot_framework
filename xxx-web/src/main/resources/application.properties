spring.application.name=xxx-web
#spring.profiles.active=$[envName]
banner.location=spring/banner.txt

#springfox.documentation.swagger.v2.path=/api-docs_
# LOGGING
# # location of config file (default classpath:logback.xml for logback)
logging.config=classpath:spring/log4j2-$[envName].xml

#mvc
# Path pattern used for static resources.
spring.mvc.static-path-pattern=/**
spring.mvc.favicon.enabled = false

# SPRING RESOURCES HANDLING (ResourceProperties)
# cache timeouts in headers sent to browser
#spring.resources.cache-period= 
# if default mappings should be added
#spring.resources.add-mappings=true
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**

# SPRING HATEOAS (HateoasProperties)
# if the primary mapper should also be configured
#spring.hateoas.apply-to-primary-object-mapper=true 

# HTTP encoding (HttpEncodingProperties)
# the encoding of HTTP requests/responses
#spring.http.encoding.charset=UTF-8
# enable http encoding support
#spring.http.encoding.enabled=true
# force the configured encoding
#spring.http.encoding.force=true

# HTTP message conversion
# the preferred JSON mapper to use for HTTP message conversion. Set to "gson" to force the use of Gson when both it and Jackson are on the classpath.
#spring.http.converters.preferred-json-mapper=

# HTTP response compression (GzipFilterProperties)
# size of the output buffer in bytes
#\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8981\u538b\u7f29\u7684\u54cd\u5e94\u4f53\u81f3\u5c11\u9700\u89812048\u5b57\u8282
#spring.http.gzip.bufferSize=
# minimum content length required for compression to occur
#spring.http.gzip.minGzipSize=
# the level used for deflate compression (0-9)
#spring.http.gzip.deflateCompressionLevel=
# noWrap setting for deflate compression (true or false)
#spring.http.gzip.deflateNoWrap=
# comma-separated list of HTTP methods for which compression is enabled
#spring.http.gzip.methods=
# comma-separated list of MIME types which should be compressed
#spring.http.gzip.mimeTypes=
# comma-separated list of user agents to exclude from compression
#spring.http.gzip.excludedAgents=
# comma-separated list of regular expression patterns to control user agents excluded from compression
#spring.http.gzip.excludedAgentPatterns=
# comma-separated list of paths to exclude from compression
#spring.http.gzip.excludedPaths=
# comma-separated list of regular expression patterns to control the paths that are excluded from compression
#spring.http.gzip.excludedPathPatterns=
# Vary header to be sent on responses that may be compressed
#spring.http.gzip.vary=

# FREEMARKER (FreeMarkerAutoConfiguration)
spring.freemarker.allow-request-override=false
spring.freemarker.allow-session-override=false
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.enabled=true
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-session-attributes=true
spring.freemarker.expose-spring-macro-helpers=true
spring.freemarker.prefer-file-system-access=true
# \u8fd9\u662f\u91cd\u70b9\uff0c \u4f1a\u8fc7\u6ee4.ftl\u540e\u7f00\u7684\u6587\u4ef6
spring.freemarker.suffix=.ftl
# spring boot \u9ed8\u8ba4\u7684\u9875\u9762\u6a21\u677f\u5b58\u653e\u76ee\u5f55
spring.freemarker.template-loader-path=classpath:/templates/freemarker/
spring.freemarker.order=1
#spring.freemarker.view-names=*.ftl
#freemark-setting
spring.freemarker.settings.template_update_delay=0
spring.freemarker.settings.locale=zh_CN
spring.freemarker.settings.default_encoding=UTF-8
spring.freemarker.settings.classic_compatible=true
spring.freemarker.settings.tag_syntax=auto_detect
spring.freemarker.settings.locale=zh_CN
spring.freemarker.settings.date_format=yyyy-MM-dd
spring.freemarker.settings.time_format=HH:mm:ss
spring.freemarker.settings.datetime_format=yyyy-MM-dd HH:mm:ss
spring.freemarker.settings.number_format=#,###.##
#ignore,debug,html_debug,rethrow
spring.freemarker.settings.template_exception_handler=html_debug



# EMBEDDED SERVER CONFIGURATION (ServerProperties)
server.port=7001
management.port=7801
#server.servlet-path=/
# if SSL support is enabled
server.ssl.enabled=false


# log pattern of the access log
server.tomcat.access-log-pattern=
# is access logging enabled
server.tomcat.access-log-enabled=false
# is compression enabled (off, on, or an integer content length limit)
server.tomcat.compression=off
# comma-separated list of mime types that Tomcat will compress
server.tomcat.compressableMimeTypes=text/html,text/xml,text/plain
# regular expression matching trusted IP addresses
#server.tomcat.internal-proxies=10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\
#        192\\.168\\.\\d{1,3}\\.\\d{1,3}|\\
#        169\\.254\\.\\d{1,3}\\.\\d{1,3}|\\
#        127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}
# front end proxy forward header
server.tomcat.protocol-header=x-forwarded-proto 
# front end proxy port header
server.tomcat.port-header=
server.tomcat.remote-ip-header=x-forwarded-for
# base dir (usually not needed, defaults to tmp)
server.tomcat.basedir=/tmp
# in seconds
server.tomcat.background-processor-delay=30
# maximum size in bytes of the HTTP message header
server.tomcat.max-http-header-size=
# number of threads in protocol handler
server.tomcat.max-threads = 0
# character encoding to use for URL decoding
server.tomcat.uri-encoding=UTF-8


#actuator-Endpoints
#\u7aef\u70b9\u7684\u8bbf\u95ee\u8def\u5f84\u9ed8\u8ba4\u662f/\u7aef\u70b9\u540d\uff0c\u4f8b\u5982health\u7684\u8bbf\u95ee\u8def\u5f84\u5c31\u662f/health
#endpoints.beans.sensitive=false
#endpoints.shutdown.enabled=true
# \u8de8\u57df
#endpoints.cors.allowed-origins=http://127.0.0.1:8080
#endpoints.cors.allowed-methods=GET,POST

info:
  component: Consumer to fetch configuration
  


eureka.metadataMap.instanceId=${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
eureka.instance.leaseRenewalIntervalInSeconds=3
eureka.client.registryFetchIntervalSeconds=5
eureka.client.availabilityZones.default=http://$[eureka.master.hostname]:$[eureka.master.port]/eureka/,http://$[eureka.backup.hostname]:$[eureka.backup.port]/eureka/
instance.preferIpAddress=true
#\u865a\u62df\u670d\u52a1--\u5982\u679c\u4e0d\u7528ribbon\uff0c\u5219\u53ef\u4ee5\u5728config.properties\u91cc\u5b9a\u4e49VIP\u7684config.provider.user\u5c5e\u6027\u91cc


#zuul.routes.service1.stripPrefix=false
#microservice-provider.ribbon.listOfServers=localhost:8080
#microservice-provider.ServerListRefreshInterval=15000

ribbon.eureka.enabled=true
eureka.client.healthcheck.enabled=true
eureka.client.serviceUrl.defaultZone=http://$[eureka.master.hostname]:$[eureka.master.port]/eureka/,http://$[eureka.backup.hostname]:$[eureka.backup.port]/eureka/
eureka.instance.prefer-ip-address=true
#eureka.instance-id=${spring.application.name}:${spring.cloud.client.ipAddress}:${spring.application.instance_id:${server.port}}
service-provider-user.ribbon.listOfServers=http://localhost:8001,http://localhost:8002
#service-provider-user.ribbon.NIWSServerListClassName=com.netflix.loadbalancer.ConfigurationBasedServerList
#service-provider-user.ribbon.ReadTimeout=60000
#service-provider-user.ribbon.ConnectTimeout=60000





